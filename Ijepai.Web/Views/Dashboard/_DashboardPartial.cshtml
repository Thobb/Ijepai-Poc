@{
    var vm_types = new List<SelectListItem>();
    vm_types.Add(new SelectListItem {Value="Windows", Text="Windows"});
    vm_types.Add(new SelectListItem {Value="Unix", Text="Unix"});
    
    var machine_sizes = new List<SelectListItem>();
    machine_sizes.Add(new SelectListItem {Value="Small", Text="Small"});
    machine_sizes.Add(new SelectListItem {Value="Medium", Text="Medium"});
    machine_sizes.Add(new SelectListItem {Value="Large", Text="Large"});
    machine_sizes.Add(new SelectListItem {Value="Extra Large", Text="Extra Large"});

    var imageList = (SelectList)TempData["OS"];
    var osImageList = new List<SelectListItem>();
    foreach (var item in imageList)
    {
        osImageList.Add(new SelectListItem { Value = item.Text, Text = item.Text });        
    }
}
@model Ijepai.Web.Models.DashBoardModel
@using (Ajax.BeginForm(
        "QuickCreate",
        "Dashboard",
        new { },
        new AjaxOptions
        {
            HttpMethod = "POST",
            OnSuccess = "App.UpdateVMStatus",
        },
        new { }
    ))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div id="create-lab-form-body">
            <div id="create-lab-form-tab">
                <div style="overflow:hidden">
                    @*<div class="form-group col-md-6">
                        @Html.LabelFor(model => model.VM_Count, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.VM_Count)
                            @Html.ValidationMessageFor(model => model.VM_Count)
                        </div>
                    </div>*@
                    @*<div class="form-group col-md-6">
                        @Html.LabelFor(model => model.VM_Type, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            Html.DropDownListFor(model => model.VM_Type, new SelectList(new[] { "Windows", "Unix" }, "15"), "Select Operating System")
                            @Html.DropDownListFor(model=>model.VM_Type, vm_types)
                            @Html.ValidationMessageFor(model => model.VM_Type, "Select Type")
                        </div>
                    </div>*@
                </div>
                <div class="machine-size-os">
                    <span class="glyphicon glyphicon-random toggle-machine-size-os" title="Use predefined or upload a custom Virtual Machine Image"></span>
                    <div class="predefined-size-os">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Machine_Size, new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @*@Html.DropDownListFor(model => model.Machine_Size, new SelectList(new[] { "Small", "Medium", "Large", "Extra Large" }, "15"), "Select Size")*@
                                @Html.DropDownListFor(model=>model.Machine_Size, machine_sizes, "Select Size")
                                @Html.ValidationMessageFor(model => model.Machine_Size)
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.OS, new { @class = "control-label col-md-3" })
                            <div class="col-md-9" id="image-list" data-count=" 1">
                                @Html.DropDownListFor(model => model.OS, osImageList, "Select Image")
                                @Html.ValidationMessageFor(model => model.OS)
                            </div>
                        </div>
                    </div>
                    @*<div class="choose-custom-machine">
                            <div class="form-group col-md-6">
                                <label class="control-label col-md-3" for="vm-image">Upload a VM Image</label>
                                <div class="col-md-9">
                                    <input type="file" name="vm-image" id="vm-image" />
                                </div>
                            </div>
                        </div>*@
                </div>
                @{
    //Ijepai.Web.Models.ApplicationDbContext db = new Ijepai.Web.Models.ApplicationDbContext();
    //ViewBag.AvailableSoftwares = db.Softwares.ToList();
                }
                <div style="overflow: hidden">
                    @*<div class="form-group col-md-6">
                            <label for="software[0]" class="col-md-3">Select software</label>
                            <div class="col-md-9">
                                @foreach (var o in ViewBag.AvailableSoftwares)
                                {
                                    <label>
                                        <input type="checkbox"
                                               name="predefinedSoftwares"
                                               value="@o.ID" />
                                        <span>@o.Software_Name</span>
                                    </label>
                                    <br />
                                }
                            </div>
                        </div>*@
                    @*<div class="form-group col-md-6">
                            @Html.LabelFor(model => model.Networked, new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Networked)
                                @Html.ValidationMessageFor(model => model.Networked)
                            </div>
                        </div>*@
                </div>
                <div style="overflow: hidden">
                    @*<div class="form-group col-md-6">
                            <label for="data-disk" class="control-label col-md-3">Upload Image</label>
                            <div class="col-md-9 data-disk-list" data-count="1">
                                <input type="file" name="data-disk" id="data-disk" class="data-disk" />
                            </div>
                        </div>*@
                    @*<div class="form-group col-md-6">
                        <label for="custom-software" class="control-label col-md-3">Upload software</label>
                        <div class="col-md-9 custom-software-list" data-count="1">
                            <input type="file" name="custom-software" id="custom-software" class="custom-software" />*@
                </div>
            </div>
        </div>
        <div id="create-lab-form-footer">
            <input type="submit" value="Create" id="create-lab-btn" class="btn btn-default" />
            <input type="button" value="Reset" id="reset-lab-btn" class="btn btn-default" />
        </div>

    </div>
}
